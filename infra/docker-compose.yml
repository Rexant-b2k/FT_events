name: 'events'

services:
  redis:
    image: redis:7-alpine
    container_name: events_redis
    command: redis-server
    # expose:
    #   - "6379"
    volumes:
      - redis_value:/data

  db:
    image: postgres:14
    container_name: events_db
    volumes:
      - postgres_value:/var/lib/postgresql/data
    env_file:
      - ./.env
    # expose:
    #   - "5432"
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  frontend:
    image: ${DOCKER_USERNAME}/events_frontend:latest
    container_name: events_frontend
    restart: always
    env_file:
      - ./.env
    command: "/bin/sh -c 'while :; do sleep 1h; done'"
    depends_on:
      db:
        condition: service_healthy

  backend:
    image: ${DOCKER_USERNAME}/events_backend:latest
    container_name: events_backend
    restart: always
    env_file:
      - ./.env
    volumes:
      - static_value:/event_app/static/
      - media_value:/event_app/media/
    depends_on:
      frontend:
        condition: service_started
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.23.4
    container_name: events_nginx
    ports:
      - "8080:80"
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/configs:/etc/nginx/conf.d:ro
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

volumes:
  postgres_value:
  redis_value:
  static_value:
  media_value:
